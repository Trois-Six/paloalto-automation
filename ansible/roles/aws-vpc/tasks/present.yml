- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ name_prefix }}-vpc"
    ipv6_cidr: False
    cidr_block: "{{ vpc_cidr_block }}"
    dns_hostnames: False
    dns_support: True
    tenancy: default
    region: "{{ aws_region }}"
    tags:
      Environment: simple
  register: reg_vpc

- name: Gather facts about all availabily zones
  amazon.aws.aws_az_info:
    region: "{{ aws_region }}"
  register: reg_aws_az_info

- name: Set fact for availability zones
  set_fact:
    azs:
      - "{{ reg_aws_az_info.availability_zones[0].zone_name }}"

- name: Create public subnets
  amazon.aws.ec2_vpc_subnet:
    assign_instances_ipv6: False
    az: "{{ azs[0] }}"
    cidr: "{{ item }}"
    map_public: True
    vpc_id: "{{ reg_vpc.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Environment: simple
      Name: "{{ name_prefix }}-vpc-public-{{ azs[0] }}"
  loop:
    - "{{ public_subnet }}"
    - "{{ mgmt_subnet }}"
  register: reg_public_subnets

- name: Create private subnets
  amazon.aws.ec2_vpc_subnet:
    assign_instances_ipv6: False
    az: "{{ azs[0] }}"
    cidr: "{{ item }}"
    map_public: False
    vpc_id: "{{ reg_vpc.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Environment: simple
      Name: "{{ name_prefix }}-vpc-private-{{ azs[0] }}"
  loop:
    - "{{ private_subnet }}"
  register: reg_private_subnets

- name: Create internet gateway
  community.aws.ec2_vpc_igw:
    vpc_id: "{{ reg_vpc.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Environment: simple
      Name: "{{ name_prefix }}-vpc"
  register: reg_igw

- name: Create public route table
  community.aws.ec2_vpc_route_table:
    subnets: "{{ reg_public_subnets | community.general.json_query('results[*].subnet.id') }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ reg_igw.gateway_id }}"
    vpc_id: "{{ reg_vpc.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Environment: simple
      Name: "{{ name_prefix }}-vpc-public"

- name: Create private route table
  community.aws.ec2_vpc_route_table:
    subnets: "{{ reg_private_subnets | community.general.json_query('results[*].subnet.id') }}"
    purge_routes: False
    vpc_id: "{{ reg_vpc.vpc.id }}"
    region: "{{ aws_region }}"
    tags:
      Environment: simple
      Name: "{{ name_prefix }}-vpc-private-{{ azs[0] }}"

- name: Create ec2 key pair
  amazon.aws.ec2_key:
    name: "{{ name_prefix }}-ssh_key"
    key_material: "{{ lookup('file', public_key_file) }}"
    region: "{{ aws_region }}"
