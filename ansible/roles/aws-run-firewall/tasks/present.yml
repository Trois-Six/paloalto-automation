- name: Get EIP of the mgmt interface of the firewall
  community.aws.ec2_eip_info:
    region: "{{ aws_region }}"
    filters:
      private-ip-address: "{{ mgmt_subnet | ansible.netcommon.ipmath(4) }}"
  register: reg_eip_mgmt

- name: Set fact to connect to the firewall
  set_fact:
    provider:
      ip_address: "{{ reg_eip_mgmt.addresses[0].public_ip }}"
      username: "{{ fw_admin }}"
      password: "{{ fw_password }}"
  when: reg_eip_mgmt is defined and reg_eip_mgmt.addresses | length > 0

- name: Checking if device is ready
  paloaltonetworks.panos.panos_check:
    provider: "{{ provider }}"
    timeout: 60
  changed_when: False  

#
# Not idempotent!!
# https://github.com/PaloAltoNetworks/pan-os-ansible/issues/4
#

# - name: Configure the vr1 virtual router
#   paloaltonetworks.panos.panos_virtual_router:
#     provider: "{{ provider }}"
#     name: vr1
#     vsys: vsys1
#   notify:
#     - Commit

# - name: Configure ethernet1/1 as the untrust interface
#   paloaltonetworks.panos.panos_interface:
#     provider: "{{ provider }}"
#     if_name: ethernet1/1
#     mode: layer3
#     comment: untrust interface
#     enable_dhcp: True
#     create_default_route: True
#     vr_name: vr1
#     vsys: vsys1
#   notify:
#     - Commit

# - name: Configure ethernet1/2 as the trust interface
#   paloaltonetworks.panos.panos_interface:
#     provider: "{{ provider }}"
#     if_name: ethernet1/2
#     mode: layer3
#     comment: trust interface
#     enable_dhcp: True
#     vr_name: vr1
#     vsys: vsys1
#   notify:
#     - Commit

- name: Configure interfaces
  paloaltonetworks.panos.panos_config_element:
    provider: "{{ provider }}"
    xpath: /config/devices/entry[@name='localhost.localdomain']/network/interface/ethernet
    element: |
      <ethernet>{{ lookup('template', 'ethernet_interfaces.xml.j2') }}</ethernet>
    edit: True
  notify:
    - Commit

- name: Configure the vr1 virtual router
  paloaltonetworks.panos.panos_config_element:
    provider: "{{ provider }}"
    xpath: /config/devices/entry[@name='localhost.localdomain']/network/virtual-router
    element: |
      <virtual-router>{{ lookup('template', 'virtual_routers.xml.j2') }}</virtual-router>
    edit: True
  notify:
    - Commit

- name: Configure security zones
  paloaltonetworks.panos.panos_zone:
    provider: "{{ provider }}"
    zone: "{{ item.name }}"
    mode: layer3
    interface: ["{{ item.interface }}"]
    vsys: vsys1
  loop:
    - name: untrust
      interface: ethernet1/1
    - name: trust
      interface: ethernet1/2
  notify:
    - Commit

- name: Configure administrative tags
  paloaltonetworks.panos.panos_tag_object:
    provider: "{{ provider }}"
    name: "{{ item.name }}"
    color: "{{ item.color }}"
    vsys: vsys1
  loop:
    - name: Inbound
      color: yellow
    - name: Outbound
      color: blue
  notify:
    - Commit

- name: Set `allow SSH to whoami` security rule
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    location: top
    rule_name: allow SSH to whoami
    source_zone: ["untrust"]
    source_ip: ["any"]
    source_user: ["any"]
    hip_profiles: ["any"]
    destination_zone: ["trust"]
    destination_ip: "{{ public_subnet | ansible.netcommon.ipmath(4) }}"
    application: ["ssh"]
    service: ["application-default"]
    category: ["any"]
    action: allow
    tag_name: ["Inbound"]
    vsys: vsys1
  notify:
    - Commit

- name: Set `allow HTTP to whoami` security rule
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    location: after
    existing_rule: allow SSH to whoami
    rule_name: allow HTTP to whoami
    source_zone: ["untrust"]
    source_ip: ["any"]
    source_user: ["any"]
    hip_profiles: ["any"]
    destination_zone: ["trust"]
    destination_ip: "{{ public_subnet | ansible.netcommon.ipmath(4) }}"
    application: ["web-browsing"]
    service: ["application-default"]
    category: ["any"]
    action: allow
    tag_name: ["Inbound"]
    vsys: vsys1
  notify:
    - Commit

- name: Set `allow any from trust` security rule
  paloaltonetworks.panos.panos_security_rule:
    provider: "{{ provider }}"
    location: after
    existing_rule: allow HTTP to whoami
    rule_name: allow any from trust
    source_zone: ["trust"]
    source_ip: ["any"]
    source_user: ["any"]
    hip_profiles: ["any"]
    destination_zone: ["untrust"]
    destination_ip: ["any"]
    application: ["any"]
    service: ["application-default"]
    category: ["any"]
    action: allow
    tag_name: ["Outbound"]
    vsys: vsys1
  notify:
    - Commit

- name: Set service objects
  paloaltonetworks.panos.panos_service_object:
    provider: "{{ provider }}"
    name: service-ssh
    protocol: tcp
    destination_port: "22"
    vsys: vsys1
  notify:
    - Commit

- name: Set `whoami HTTP from untrust` NAT rule
  paloaltonetworks.panos.panos_nat_rule:
    provider: "{{ provider }}"
    location: top
    rule_name: whoami HTTP from untrust
    source_zone: ["untrust"]
    source_ip: ["any"]
    destination_zone: untrust
    to_interface: ethernet1/1
    destination_ip: "{{ public_subnet | ansible.netcommon.ipmath(4) }}"
    service: service-http
    dnat_address: "{{ private_subnet | ansible.netcommon.ipmath(10) }}"
    tag: ["Inbound"]
    vsys: vsys1
  notify:
    - Commit

- name: Set `whoami SSH from untrust` NAT rule
  paloaltonetworks.panos.panos_nat_rule:
    provider: "{{ provider }}"
    location: after
    existing_rule: whoami HTTP from untrust
    rule_name: whoami SSH from untrust
    source_zone: ["untrust"]
    source_ip: ["any"]
    destination_zone: untrust
    to_interface: ethernet1/1
    destination_ip: "{{ public_subnet | ansible.netcommon.ipmath(4) }}"
    service: service-ssh
    dnat_address: "{{ private_subnet | ansible.netcommon.ipmath(10) }}"
    tag: ["Inbound"]
    vsys: vsys1
  notify:
    - Commit

- name: Set `trust outbound` NAT rule
  paloaltonetworks.panos.panos_nat_rule:
    provider: "{{ provider }}"
    location: after
    existing_rule: whoami SSH from untrust
    rule_name: trust outbound
    source_zone: ["trust"]
    source_ip: ["any"]
    destination_zone: untrust
    to_interface: any
    destination_ip: any
    snat_type: dynamic-ip-and-port
    snat_address_type: interface-address
    snat_interface: ethernet1/1
    tag: ["Outbound"]
    vsys: vsys1
  notify:
    - Commit
